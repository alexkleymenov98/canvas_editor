{"version":3,"sources":["component/Editor/hook.ts","component/Editor/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useEditor","useState","canvas","backgroundColor","fontSize","href","color","canvasScale","backgroundImage","linkImage","data","setData","container","useRef","onHandleKeyDown","event","which","getActiveObjects","forEach","object","remove","deleteActiveObject","handleRemoveBackground","setBackgroundImage","renderAll","prev","useEffect","fabric","Canvas","height","current","clientHeight","width","clientWidth","preserveObjectStacking","document","addEventListener","removeEventListener","state","handleAddText","value","add","IText","fontFamily","fill","padding","left","handleDownload","image","toDataURL","format","quality","handleAddBackground","url","Image","fromURL","img","scaleX","Number","scaleY","crossOrigin","handleChangeColor","getActiveObject","set","target","handleChangeStyleText","keyStyle","checked","handleChangeFontSize","handleUploadImage","files","URL","createObjectURL","handleOnChangeBackgroundColor","hex","handleUploadImageWithLink","getElement","src","alert","handleOnChangeLink","Editor","className","onClick","type","onChange","name","e","min","max","step","htmlFor","id","accept","download","style","border","margin","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7f2171c2.chunk.js","sourcesContent":["import {ChangeEvent, RefObject, useEffect, useRef, useState} from \"react\";\r\nimport { fabric } from \"fabric\";\r\nimport {Canvas } from \"fabric/fabric-impl\";\r\nimport {ColorResult} from \"react-color\";\r\n\r\ntype TData = {\r\n    canvas: Canvas | null;\r\n    backgroundColor: string;\r\n    fontSize: string;\r\n    href: string;\r\n    color: string;\r\n    canvasScale: number;\r\n    backgroundImage: string;\r\n    linkImage:string;\r\n}\r\ntype TKeyStyle = 'fontWeight'|'fontStyle'|'underline';\r\n\r\nexport type TFUEditor = ()=>{\r\n    state:TData;\r\n    container:RefObject<HTMLCanvasElement>;\r\n    handleAddText:(value?:string)=>void;\r\n    handleDownload:()=>void;\r\n    handleAddBackground:(url:string)=>void;\r\n    handleRemoveBackground:()=>void;\r\n    handleChangeColor:(event:ChangeEvent<HTMLInputElement>)=>void;\r\n    handleChangeStyleText:(event:ChangeEvent<HTMLInputElement>,keyStyle:TKeyStyle)=>void;\r\n    handleChangeFontSize:(event:ChangeEvent<HTMLInputElement>)=>void;\r\n    handleUploadImage:(event:ChangeEvent<HTMLInputElement>)=>void;\r\n    handleOnChangeBackgroundColor:(color:ColorResult)=>void;\r\n    handleUploadImageWithLink:()=>void;\r\n    handleOnChangeLink:(event:ChangeEvent<HTMLInputElement>)=>void;\r\n}\r\nexport const useEditor:TFUEditor = ()=>{\r\n    const [data, setData] = useState<TData>({\r\n        canvas: null,\r\n        backgroundColor: \"#ffffff\",\r\n        fontSize: '24',\r\n        href: \"\",\r\n        color: \"#000000\",\r\n        canvasScale: 1,\r\n        backgroundImage: \"\",\r\n        linkImage:'',\r\n    });\r\n\r\n    const container = useRef<HTMLCanvasElement>(null);\r\n\r\n    const handleOnChangeLink:ReturnType<TFUEditor>['handleOnChangeLink'] = (event)=>{\r\n        setData((prev)=>({...prev, linkImage:event.target.value}))\r\n    }\r\n\r\n    /** функция добавляет текст на canvas */\r\n    const handleAddText:ReturnType<TFUEditor>['handleAddText'] = (value)=>{\r\n        const {canvas, color} = data;\r\n        if(canvas){\r\n            canvas.add(\r\n                new fabric.IText(`${value || 'Текст'}`, {\r\n                    fontFamily: \"arial\",\r\n                    fill: color,\r\n                    fontSize: 29,\r\n                    padding: 5,\r\n                    left: 0,\r\n                })\r\n            )\r\n        }\r\n        setData((prev)=>({...prev, canvas}));\r\n    }\r\n\r\n    /** функция изменяет цвет выбранного текста */\r\n    const handleChangeColor:ReturnType<TFUEditor>['handleChangeColor'] = (event) => {\r\n        const { canvas } = data;\r\n        if (canvas && canvas.getActiveObject()) {\r\n            canvas.getActiveObject().set(\"fill\", event.target.value);\r\n            canvas.renderAll();\r\n        }\r\n        setData((prev)=>({...prev, canvas, color:event.target.value}));\r\n    };\r\n\r\n    /** функция изменяет стили текста по ключам */\r\n    const handleChangeStyleText:ReturnType<TFUEditor>['handleChangeStyleText'] = (event, keyStyle)=>{\r\n        const { canvas } = data;\r\n        let value:string | boolean  = '';\r\n        if(keyStyle === 'underline'){\r\n            value = event.target.checked;\r\n        }\r\n        if(keyStyle === 'fontWeight'){\r\n            value = event.target.checked ? 'bold':'';\r\n        }\r\n        if(keyStyle === 'fontStyle'){\r\n            value = event.target.checked ? 'italic':'';\r\n        }\r\n        if (canvas && canvas.getActiveObject()) {\r\n            // @ts-ignore\r\n            canvas.getActiveObject().set(keyStyle, value);\r\n            canvas.renderAll();\r\n        }\r\n        setData((prev)=>({...prev, canvas}))\r\n\r\n    }\r\n\r\n    /** функция изменяет размер выделенного текста */\r\n    const handleChangeFontSize:ReturnType<TFUEditor>['handleChangeFontSize'] = (event)=>{\r\n        const { canvas } = data;\r\n        if (canvas && canvas.getActiveObject()) {\r\n            // @ts-ignore\r\n            canvas.getActiveObject().set(\"fontSize\", event.target.value);\r\n            canvas.renderAll();\r\n        }\r\n        setData((prev)=>({...prev, canvas, fontSize:event.target.value}))\r\n    }\r\n\r\n    /** функция удаляет активный элемент */\r\n    const deleteActiveObject = () => {\r\n        const { canvas } = data;\r\n        if(canvas){\r\n            canvas.getActiveObjects().forEach((object) => {\r\n                canvas.remove(object);\r\n            });\r\n        }\r\n    };\r\n\r\n    /** функция вызывает удаление активного елемента по нажатия на Delete */\r\n    const onHandleKeyDown = (event:KeyboardEvent) => {\r\n        if (event.which === 46) {\r\n            deleteActiveObject();\r\n        }\r\n    };\r\n\r\n    /** функция скачаивает изображение на canvas */\r\n    const handleDownload = () => {\r\n        if(data.canvas){\r\n            const image = data.canvas.toDataURL({\r\n                format: \"png\",\r\n                quality: 1\r\n            });\r\n            setData((prev)=>({...prev, href:image}))\r\n        }\r\n    };\r\n\r\n    /** функция удаляет фон canvas */\r\n    const handleRemoveBackground = () => {\r\n        const { canvas } = data;\r\n        if (canvas && canvas.backgroundImage) {\r\n\r\n            // @ts-ignore\r\n            canvas.setBackgroundImage(null);\r\n            canvas.renderAll();\r\n            setData((prev)=>({...prev, backgroundImage:'',canvas}))\r\n        }\r\n    };\r\n\r\n    const handleOnChangeBackgroundColor:ReturnType<TFUEditor>['handleOnChangeBackgroundColor'] = (color) => {\r\n        const { canvas } = data;\r\n        handleRemoveBackground();\r\n        if (canvas) {\r\n            canvas.backgroundColor = color.hex;\r\n            canvas.renderAll();\r\n        }\r\n        setData((prev)=>({...prev, canvas, backgroundColor:color.hex}))\r\n    };\r\n\r\n    /** функция добавляет фон по ссылке */\r\n    const handleAddBackground:ReturnType<TFUEditor>['handleAddBackground'] = (url) => {\r\n        const {canvas } = data;\r\n        if(canvas){\r\n            handleRemoveBackground();\r\n            fabric.Image.fromURL(\r\n                url,\r\n                (img) => {\r\n                    canvas.setBackgroundImage(\r\n                        img,\r\n                        () => {\r\n                            canvas.renderAll();\r\n                        },\r\n                        {\r\n                            scaleX: Number(canvas?.width) / (img && img.width ? img.width : 0),\r\n                            scaleY: Number(canvas?.height) / (img && img.height ? img.height : 0)\r\n                        }\r\n                    );\r\n                },\r\n                { crossOrigin: \"anonymous\" }\r\n            );\r\n            setData((prev)=>({...prev, backgroundImage:url, canvas}));\r\n        }\r\n    };\r\n\r\n    /** функция загружает локальное изображение с компьютера */\r\n    const handleUploadImage:ReturnType<TFUEditor>['handleUploadImage'] = (event)=>{\r\n        const { canvas } = data;\r\n        if(canvas && event.target.files){\r\n            const url = URL.createObjectURL(event.target.files[0]);\r\n            fabric.Image.fromURL(\r\n                url,\r\n                (img) => {\r\n                    canvas.add(img);\r\n                    canvas.renderAll();\r\n                },{ scaleX: 0.15, scaleY: 0.15 }\r\n            );\r\n        }\r\n        setData((prev)=>({...prev, canvas}));\r\n    }\r\n\r\n    /** функция загрузки файла по ссылке */\r\n    const handleUploadImageWithLink:ReturnType<TFUEditor>['handleUploadImageWithLink'] = ()=>{\r\n        const {canvas, linkImage} = data;\r\n        if(canvas && linkImage){\r\n            fabric.Image.fromURL(\r\n                linkImage,\r\n                (img) => {\r\n                    if(!img.getElement()?.src){\r\n                        alert('неверная ссылка')\r\n                     return;\r\n                    }\r\n                    canvas.add(img);\r\n                    canvas.renderAll();\r\n                },\r\n                { scaleX: 0.15, scaleY: 0.15 }\r\n            );\r\n            setData((prev)=>({...prev, canvas, linkImage:''}))\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        const canvas = new fabric.Canvas(\"canvas\", {\r\n            backgroundColor: \"#FDEFEF\",\r\n            height: container.current?.clientHeight ?? 500,\r\n            width: container.current?.clientWidth ?? 500,\r\n            preserveObjectStacking: true\r\n        });\r\n        setData((prev)=>({...prev, canvas}));\r\n        document.addEventListener(\"keydown\", onHandleKeyDown);\r\n        return ()=>{\r\n            document.removeEventListener(\"keydown\", onHandleKeyDown);\r\n        }\r\n    },[])\r\n\r\n    return {\r\n        state:data,\r\n        container,\r\n        handleAddText,\r\n        handleDownload,\r\n        handleRemoveBackground,\r\n        handleAddBackground,\r\n        handleChangeColor,\r\n        handleChangeStyleText,\r\n        handleChangeFontSize,\r\n        handleUploadImage,\r\n        handleOnChangeBackgroundColor,\r\n        handleUploadImageWithLink,\r\n        handleOnChangeLink,\r\n    }\r\n}","import React, {FC} from \"react\";\r\nimport {TwitterPicker} from \"react-color\";\r\nimport {useEditor} from \"./hook\";\r\n\r\ntype EditorProps = {}\r\n\r\nconst Editor: FC<EditorProps> = () => {\r\n    const {\r\n        state,\r\n        container,\r\n        handleAddText,\r\n        handleDownload,\r\n        handleAddBackground,\r\n        handleRemoveBackground,\r\n        handleChangeColor,\r\n        handleChangeStyleText,\r\n        handleChangeFontSize,\r\n        handleUploadImage,\r\n        handleOnChangeBackgroundColor,\r\n        handleUploadImageWithLink,\r\n        handleOnChangeLink,\r\n    } = useEditor();\r\n    return <>\r\n        <div>\r\n            <div className=\"settingns-wrapper\">\r\n                <div className=\"setting-item\">\r\n                    <button onClick={() => handleAddText()}>Добавить текст</button>\r\n                </div>\r\n                <div className=\"setting-item\"><label>\r\n                    <input\r\n                        type=\"color\"\r\n                        value={state.color}\r\n                        onChange={handleChangeColor}\r\n                    />\r\n                    цвет текста\r\n                </label></div>\r\n                <div className=\"setting-item\">\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"fonttype\"\r\n                            onChange={(e) => {\r\n                                handleChangeStyleText(e, 'fontWeight')\r\n                            }}\r\n                        />\r\n                        Bold\r\n                    </label>\r\n                </div>\r\n                <div className=\"setting-item\">\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"fonttype\"\r\n                            onChange={(e) => {\r\n                                handleChangeStyleText(e, 'fontStyle')\r\n                            }}\r\n                        />\r\n                        Курсив\r\n                    </label>\r\n                </div>\r\n                <div className=\"setting-item\">\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"fonttype\"\r\n                            onChange={(e) => {\r\n                                handleChangeStyleText(e, 'underline')\r\n                            }}\r\n                        />\r\n                        Подчеркнутый\r\n                    </label>\r\n                </div>\r\n                <div className=\"setting-item\">\r\n                    <label>\r\n                        <input\r\n                            type=\"range\"\r\n                            min=\"1\"\r\n                            max=\"120\"\r\n                            step=\"1\"\r\n                            value={state.fontSize}\r\n                            onChange={handleChangeFontSize}\r\n                        />\r\n                        Размер шрифта\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className=\"settingns-wrapper\">\r\n                <div className=\"setting-item\">\r\n                    <button\r\n                        onClick={() => handleAddBackground(\"https://cdn.pixabay.com/photo/2015/04/23/22/00/tree-736885__480.jpg\")}>Добавить\r\n                        Фон\r\n                    </button>\r\n                </div>\r\n                <div className=\"setting-item\">\r\n                    <button onClick={handleRemoveBackground}>Удалить Фон</button>\r\n                </div>\r\n                <div className=\"setting-item\">\r\n                    <label htmlFor=\"img\">Upload image\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"img\"\r\n                            name=\"img\"\r\n                            accept=\"image/*\"\r\n                            onChange={handleUploadImage}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div className=\"setting-item\">\r\n                    <input\r\n                        value={state.linkImage}\r\n                        type=\"text\"\r\n                        onChange={handleOnChangeLink}\r\n                    />\r\n                    <button onClick={handleUploadImageWithLink}>загрузить по ссылке</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <a\r\n                className=\"download\"\r\n                download={\"image.png\"}\r\n                href={state.href}\r\n                onClick={handleDownload}\r\n            >\r\n                Скачать картинку\r\n            </a>\r\n\r\n            <TwitterPicker\r\n                color={state.backgroundColor}\r\n                onChange={handleOnChangeBackgroundColor}\r\n            />\r\n            <canvas\r\n                id=\"canvas\"\r\n                style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    border: \"2px solid black\",\r\n                    margin: \"auto\"\r\n                }}\r\n                ref={container}\r\n            ></canvas>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default Editor;","import React from 'react';\r\nimport './App.css';\r\nimport Editor from \"./component/Editor\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n            <Editor/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}